---
title: "Tucson Car Collision Analysis"
subtitle: "INFO 526 - Fall 2023 - Project Final"
author:
 - name: "**Data Dazzlers**: <br> Sanja Dmitrovic, Jiayue He, Vidhyananth Sivashanmugam,<br> Naitik Shah, Varun Soni, Mohammad Ali Farmani" 
title-slide-attributes:
  data-background-image: images/watercolour_sys02_img34_teacup-ocean.jpg
  data-background-size: stretch
  data-background-opacity: "0.7"
  data-slide-number: none
format:
  revealjs:
    theme:  ['data/customtheming.scss']
  
editor: visual
execute:
  echo: false
---

```{r, warning=FALSE, message=FALSE}
#| label: load-pkgs
#| message: false
#| include: false 

if(!require(pacman))
  install.packages("pacman")

pacman::p_load(
  tidyverse,
  dlookr,
  kableExtra,
  reader,
  scales,
  gt,
  DT,
  janitor,
  stringer,
  leaflet,
  highcharter,
  waffle,
  htmlwidgets
  )


```

```{r}
#| label: setup
#| include: false

# Plot theme
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 11))

# For better figure resolution
knitr::opts_chunk$set(
  fig.retina = 3, 
  dpi = 300, 
  fig.width = 6, 
  fig.asp = 0.618 
  )
```

```{r}
#| label: load-data
#| message: false
#| echo: false
#| results: hide

boolan_tranform <- function(vector) {
  result <- ifelse(vector == 1, "Yes", "No")
  return(result)
}

cars_data <- read.csv("data/tucson_data.csv") |>
  clean_names() |>
  mutate(
    collision_date  = format(ymd_hms(collision_date), "%m/%d/%Y"), # Clean date type
    year = year_occu,
    month = month_abbr,
    hour = ifelse(time_occu == 0,"12:00 AM",
               ifelse(nchar(as.character(time_occu)) == 3,
                      paste0(substr(as.character(time_occu), 1, 1), ":", ... =
                               substr(as.character(time_occu), 2, 3), " AM"),
                      format(strptime(as.character(time_occu), 
                                      format = "%H%M", tz = "UTC"), 
                             format = "%I:%M %p"))),
    weekday = if_else(day %in% c("Saturday", "Sunday"), "Weekend", "Weekday"),
    offense_desc = if_else(str_detect(offense_desc, "^\\s*$"), "Unknown", offense_desc),
    offense_desc_main = str_split_fixed(offense_desc, ":", n = 2)[, 1],
    offense_desc_sub = if_else(str_detect(
                    str_split_fixed(offense_desc, ":", n = 2)[, 2], "^\\s*$"),
                    "Other", 
                    str_split_fixed(offense_desc, ":", n = 2)[, 2]),
    offense_type = case_when(
          str_detect(offense_desc_main, "Fatal") ~ "Fatal Accidents",
          str_detect(offense_desc_main, "Injury") ~ "Injury Accidents",
          str_detect(offense_desc_main, "Property Damage") ~ "Property Damage Accidents",
          str_detect(offense_desc_main, "Driving Under the Influence") ~ "DUI Accidents",
          str_detect(offense_desc_main, "Non-Traffic") ~ "Non-Traffic Accidents",
          str_detect(offense_desc_main, "Other") ~ "Other Vehicle Accidents",
          TRUE ~ "Miscellaneous Accidents"
          ),
    collision_type = if_else(str_detect(collision_type, "^\\s*$"),
                             "Unknown", collision_type),
    in_out_vehicle = case_when(
      grepl("Pedestrian|Bicycle|Parked_Unit|Single Pedestrian", 
          collision_type, ignore.case = TRUE) ~ "Out of Vehicle",
      grepl("Vehicle|Motorcycle|Bus|Train", 
            collision_type, ignore.case = TRUE) ~ "In Vehicle",
    TRUE ~ "Unknown"),
    distance = if_else(str_detect(distance, "^\\s*$"), "Unknown", distance),
    traffic_control_device = boolan_tranform(traffic_control_device),
    work_zone = boolan_tranform(work_zone),
    violation_too_close = boolan_tranform(violation_too_close),
    violation_traffic_control_device = boolan_tranform(violation_traffic_control_device),
    violation_turning = boolan_tranform(violation_turning),
    violation_wrong_way = boolan_tranform(violation_wrong_way),
    violation_lane = boolan_tranform(violation_lane),
    violation_crosswalk = boolan_tranform(violation_crosswalk),
    violation_failure_to_yield = boolan_tranform(violation_failure_to_yield),
    violation_aggressive_driving = boolan_tranform(violation_aggressive_driving),
    collision_neighborhd = if_else(str_detect(collision_neighborhd, "^\\s*$"),
                                   "Uknw", collision_neighborhd), 
    collision_direction = if_else(str_detect(collision_direction, "^\\s*$"),
                                  "Unknown", collision_direction), 
    accident_location = if_else(str_detect(accident_location, "^\\s*$"),
                                "Unknown", accident_location)
    ) |>
  select(accident_id, collision_date, year, month, day, weekday, hour, time_occu,
         offense_desc_main, offense_desc_sub,offense_type, injury_severity,
         collision_type, collision_manner, division, distance, hitand_run,
         pedestrian, fatal_collision, intersection_related, traffic_control_device,
         work_zone, violation_speed, total_injuries, latitude, longitude, 
         violation_too_close, violation_traffic_control_device,violation_turning,
         violation_wrong_way, violation_lane, violation_crosswalk, ward,
         violation_failure_to_yield, violation_aggressive_driving, operator_impaired,
         operator_distracted, x_coordinate, y_coordinate, total_fatalities,
         collision_neighborhd, collision_direction, accident_location,
         intersection_related, in_out_vehicle) 

data("penguins")
```

## Introduction

::: incremental
-   The primary goal of the project is to develop a user-friendly visualization tool that provides detailed insights into the frequency, severity, and causes of traffic accidents in Tucson.

-   **GIS Data from the City of Tucson** - This dataset contains publicly-available records of vehicle collisions from the Tucson Police Department, covering the period from March 2022 to the present.

-   Key variables in this dataset include: Date of collision, Injury severity, Manner of collision, Fatality status
:::

## Question 1

::: incremental
::: {.incremental width="40%"}
-   Does day of the week and/or time of day affect severity and the number of accidents?

-   Key variables to use:

    -   TimeOccu (time at which accident occurred)
    -   Day (day of week accident occurred)
    -   InjurySeverity (how serious the injury caused by accident was)

-   ::: incremental
    These variables may help us explore why certain days of the weeks or times of day lead to more accidents.
    :::
:::
:::

## Approach

::: incremental
-   Development of Interactive Visualizations :
    -   Utilize R Shiny for the creation of an interactive dashboard, allowing users to filter and explore the data based on specific criteria (e.g., time period, accident severity).
    -   Implement Leaflet for interactive maps to display spatial data and identify accident hotspots within Tucson using the latitude and longitude coordinates in the dataset.
    -   Use ggplot2 and Plotly for creating dynamic and static visualizations that can be adjusted according to user input.
:::

## Time series of Accidents

-   This plots show time series of Accident over months for each year.

-   During summer the number of accident decreases.

-   It has been observed that women exhibit a higher employment rate.

    ![Time series of collision](images/times.png)

## Times with higher Accident

-   This plots show heat map of number of accidents in each hour of everyday in a week.

-   Except of weekends, every day from 1pm to 6 pm most accidents happens

    ![](images/heat.png){width="643mm"}

## Question 2

::: incremental
-   What is the relationship between the type of violation and if the accident resulted in a fatality?

-   Key variables to use:

    -   FatalCollision
    -   TotalFatalities

-   We will create a series of stacked bar plots that show the number of accidents based the type of violation. Pie charts may be included to provide a high-level summary of the percentage of crashes per violation type.
:::

## Approach for Question 2

::: incremental
-   Same as the first question:

    -   Utilize R Shiny for the creation of an interactive dashboard, allowing users to filter and explore the data based on specific criteria (e.g., time period, accident severity).
    -   Implement Leaflet for interactive maps to display spatial data and identify accident hotspots within Tucson using the latitude and longitude coordinates in the dataset.
    -   Use ggplot2 and Plotly for creating dynamic and static visualizations that can be adjusted according to user input.
:::

## Collision Severity  

-   50.2% of accidents without injury
-   1.6% of accidents with fatal injury

![](images/bar.png)

## Collision Reason

::: columns
::: {.column width="40%"}
The reasons
:::

::: {.column width="60%"}
![](images/pies.png){width="116mm"}
:::
:::

## Thank You

![Image credit: Danielle Navarro, Percolate.](images/watercolour_sys02_img34_teacup-ocean.png){fig-align="center" width="500"}
